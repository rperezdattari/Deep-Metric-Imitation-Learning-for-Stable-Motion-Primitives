Using cluster instructions:

1) Connect to server 1: ssh <netid>@linux-bastion.tudelft.nl
2) Connect from server 1 to server 2: ssh login1.hpc.tudelft.nl
3) Choose modules to use:
    a) Enable HPC software collection: module use /opt/insy/modulefiles
    b) See available modules: module avail
    c) Select modules to use: module load cuda/11.0 cudnn/11.0-8.0.3.33 
    d) Check loaded modules: module list

pip3 install --user torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio===0.7.2 -f https://download.pytorch.org/whl/torch_stable.html

Screens: https://askubuntu.com/questions/332104/open-another-terminal-window-with-the-same-ssh-session-as-original-window

Use screen!

- Compress results: zip -r results.zip CONDOR/Refactored_code/results/
                    zip -r /tudelft.net/staff-umbrella/condorstorage/results.zip /tudelft.net/staff-umbrella/condorstorage/results/

- Copy paste results: scp rperezdattari@linux-bastion.tudelft.nl:CONDOR/src/results.zip .
                      scp rperezdattari@linux-bastion.tudelft.nl:/tudelft.net/staff-umbrella/condorstorage/results.zip .

Reactive control: Robot sensor interface

zip -r results.zip results/1st_order_basic/2/ results/1st_order_basic/21/ results/1st_order_basic/23/ results/1st_order_basic/24/ results/1st_order_basic/26/ results/1st_order_basic/27/ results/1st_order_basic/29/ results/1st_order_basic/3/ results/1st_order_basic/4/ results/1st_order_basic/5/ results/1st_order_basic/7/ results/1st_order_basic/8/ results/1st_order_basic/9/
ex

Create study for training dataset:

python3 create_optuna_study.py --params 2nd_order_outer --train-dataset True

Create study for hyperparamater optimization:

python3 hyperparam_optimization/create_optuna_study.py --params 1st_order_2D --hyperparameter-optimization True


Check cluster's training status through tensorboard:

1) Log in to cluster: (local computer) ssh [<netid>@]linux-bastion.tudelft.nl

2) Start tensorboard in cluster server: (server) tensorboard --logdir CONDOR/src/runs/

3) Forward tensorboard port to local computer (port is 6006 by default): (local computer) ssh -NfL 6006:localhost:6006 rperezdattari@linux-bastion.tudelft.nl

4) Open tensorboard in local computer going to: http://localhost:6006

Extra: in case port 6006 is under is it is possible to kill it: lsof -ti:6006 | xargs kill -9


Steps to run an experiment on the cluster:

1) After being logged in, remove old stuff (delete results folder, delete tensorboard runs and deleted SQL databases)

2) Check that the status variables in 'experiments/status_variables' are the ones that you need to, otherwise create them in results summary.

3) Create an initial SQL database running 'python3 create_optuna_study.py --params <NAME> --train-dataset True'

4) Check the parameters of the experiment, don't forget to double check 'dataset_name' and 'length_dataset'.

4) Run experiments!: sbatch experiments/<EXPERIMENT NAME>

results folder: /tudelft.net/staff-umbrella/condorstorage/



double tunneling: ssh -NfL 8080:localhost:8080 rperezdattari@linux-bastion.tudelft.nl ssh -NfL 8080:localhost:8080 -N login1.hpc.tudelft.nl


### Using Delft Blue
log in: ssh rperezdattari@login.delftblue.tudelft.nl

source /home/rperezdattari/.cache/pypoetry/virtualenvs/condor-7Xoc7Nxu-py3.7/bin/activate
module load 2022r2 openmpi py-torch

# cancel all jobs
squeue -u $USER | awk '{print $1}' | tail -n+2 | xargs scancel

# conda
conda activate /tudelft.net/staff-umbrella/condorstorage/software/condor
